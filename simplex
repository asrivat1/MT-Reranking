#!/usr/bin/env python
import optparse
import sys
import random

optparser = optparse.OptionParser()
optparser.add_option("-k", "--kbest-list", dest="input", default="data/dev+test.100best", help="100-best translation lists")
optparser.add_option("-l", "--lm", dest="lm", default=-1.0, type="float", help="Language model weight")
optparser.add_option("-t", "--tm1", dest="tm1", default=-0.5, type="float", help="Translation model p(e|f) weight")
optparser.add_option("-s", "--tm2", dest="tm2", default=-0.5, type="float", help="Lexical translation model p_lex(f|e) weight")
(opts, _) = optparser.parse_args()
weights = {'p(e)'       : float(opts.lm) ,
           'p(e|f)'     : float(opts.tm1),
           'p_lex(f|e)' : float(opts.tm2)}

def three_random():
    thetas = []
    for i in range(0,3):
        theta = {}
        for key in weights.keys():
            theta[key] = - random.random()
    return thetas

def midpoint(theta1, theta2):
    mid = {}
    for key in theta1.keys():
        mid = (theta1[key] + theta2[key]) / 2.0
    return mid

def shrink_triangle(thetas):
    # find the midpoint between good and best
    m = midpoint(thetas[1], thetas[0])
    # find the midpoint between worst and best
    s = midpoint(thetas[2], thetas[0])

    return [thetas[0], m, s]

def simplex():
